<script>
var app = new Vue({
  el: '#app',
  delimiters: ['${', '}'],
  data: {
    newTask: '',
    tasks: [],
    isLoading: false,
    isEditing: false,
    editingTaskIndex: 0
  },
  methods: {
    loadTasks: function(){
      this.isLoading = true;

      axios.get('/tasks')
      .then((result) => {
        this.logResult(result);
        this.tasks = result.data.tasks;
        this.isLoading = false;
      });
    },

    addTask: function(){
      if(this.newTask == '')
        return;

      axios.post('/tasks', { title: this.newTask })
      .then((result) => {
        this.logResult(result);
        this.newTask = '';

        this.loadTasks();
      });
    },

    switchTask: function(task){
      this.isLoading = true;
      task.isDone = !task.isDone;

      axios.put(`/task/${task._id}`, {
        newTaskData:{
          isDone: task.isDone
        }
      })
      .then((result) => {
        this.logResult(result);
        this.isLoading = false;

        this.loadTasks();
      });
    },

    removeTask: function(task, taskIndex){
      this.isLoading = true;

      axios.delete(`/task/${task._id}`)
      .then((result) => {
        this.logResult(result);
        this.tasks.splice(taskIndex, 1);
        this.isLoading = false;

        this.loadTasks();
      });
    },

    logResult: function(result){
      if(result.data.message != ''){
        console.log(`SUCCESS: ${result.data.message}`);
      }
    },
    isTaskBeingEdited(taskIndex){
      if(!this.isEditing){
        return false;
      }else if(this.editingTaskIndex == taskIndex){
        return true;
      }else {
        return false;
      }
    },

    editTask(taskIndex){
      if(this.isEditing == true){
        alert('You have to finish editing previous task!');
        return;
      }
      this.isEditing = true;
      this.editingTaskIndex = taskIndex;
    },

    updateTask: function(task){
      this.isEditing=false;
      this.isLoading = true;

      axios.put(`/task/${task._id}`, {
        newTaskData:task
      })
      .then((result) => {
        this.logResult(result);
        this.isLoading = false;

        this.loadTasks();
      });
    },
  },
   beforeMount(){
      this.loadTasks();
   },
});
</script>
